# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GOOGLE_SERVICE_ACCESS_CONFIG: "${{ secrets.GOOGLE_SERVICE_ACCESS_CONFIG }}"
  GOOGLE_VERIFY_KEY: "${{ secrets.GOOGLE_VERIFY_KEY }}"
  GOOGLE_VERIFY_CERT: "${{ secrets.GOOGLE_VERIFY_CERT }}"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Runs a single command using the runners shell
      - name: Setup secrets
        run: |
          echo "$GOOGLE_SERVICE_ACCESS_CONFIG" > play_config.json
          echo "$GOOGLE_VERIFY_KEY" > key.pem
          echo "$GOOGLE_VERIFY_CERT" > cert.pem
          echo "APP_CONFIG_RELEASE_STORE_PASSWORD=$(openssl rand -base64 32)" >> $GITHUB_ENV
          echo "APP_CONFIG_RELEASE_STOREFILE=release.pkcs12" >> $GITHUB_ENV
          echo "APP_CONFIG_RELEASE_STORE_ALIAS=1" >> $GITHUB_ENV

      - name: Check exported variables
        run: |
          echo 'APP_CONFIG_RELEASE_STORE_PASSWORD: ${{env.APP_CONFIG_RELEASE_STORE_PASSWORD}}'
          echo 'APP_CONFIG_RELEASE_STOREFILE: ${{env.APP_CONFIG_RELEASE_STOREFILE}}'
          echo 'APP_CONFIG_RELEASE_STORE_ALIAS: ${{env.APP_CONFIG_RELEASE_STORE_ALIAS}}'

      - name: Convert pem to pkcs12
        run: |
          openssl pkcs12 -export -out ${{env.APP_CONFIG_RELEASE_STOREFILE}} -passout pass:${{env.APP_CONFIG_RELEASE_STORE_PASSWORD}} -in cert.pem -inkey key.pem

      - name: Build DGrocery app
        run: ./gradlew --no-daemon build
